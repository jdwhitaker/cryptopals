def fixed_xor(bytes1, bytes2):
    if len(bytes2) == 1:
        bytes2 = bytes2 * len(bytes1)
    output = []
    for b1, b2 in zip(bytes1, bytes2):
        o = b1 ^ b2
        output.append(o)
    return bytes(output)

ciphertext_1 = b"\x46\x64\xDC\x06\x97\xBB\xFE\x69\x33\x07\x15\x07\x9B\xA6\xC2\x3D\x2B\x84\xDE\x4F\x90\x8D\x7D\x34\xAA\xCE\x96\x8B\x64\xF3\xDF\x75"
ciphertext_2 = b"\x51\x7E\xCC\x05\xC3\xBD\xEA\x3B\x33\x57\x0E\x1B\xD8\x97\xD5\x30\x7B\xD0\x91\x6B\x8D\x82\x6B\x35\xB7\x8B\xBB\x8D\x74\xE2\xC7\x3B"
plaintext_1 = b"\x43\x72\x79\x70\x74\x6F\x67\x72\x61\x70\x68\x79\x20\x43\x72\x79\x70\x74\x6F\x67\x72\x61\x70\x68\x79\x20\x43\x72\x79\x70\x74\x6F"

keystream_1 = fixed_xor(ciphertext_1, plaintext_1)
plaintext_2 = fixed_xor(keystream_1, ciphertext_2)
print(plaintext_2)